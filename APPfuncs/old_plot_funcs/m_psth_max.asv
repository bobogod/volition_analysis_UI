function m_psth_max(animal,DataPaths)
%% initialization
Data=load(DataPaths{1}).Data;
positives=[Data.Meta.Rule.Channels(2) Data.Meta.Rule.Units(2)-2];
negatives=[Data.Meta.Rule.Channels(6) Data.Meta.Rule.Units(6)-2];
others=[];
for i=1:length(Data.UnitsOnline.SpikeNotes(:,1))
    if Data.UnitsOnline.SpikeNotes(i,3)>0
        if ~(Data.UnitsOnline.SpikeNotes(i,1)==positives(1) && Data.UnitsOnline.SpikeNotes(i,2)==positives(2))
            if ~(Data.UnitsOnline.SpikeNotes(i,1)==negatives(1) && Data.UnitsOnline.SpikeNotes(i,2)==negatives(2))
                others=[others; Data.UnitsOnline.SpikeNotes(i,1:2)];
            end
        end
    end
end
if ~isempty(others)
    others_flag=ones(1,length(others(:,1)));
    for index=2:length(DataPaths)
        Data=load(DataPaths{index}).Data;
        for i=1:length(others_flag)
            t=find(Data.UnitsOnline.SpikeNotes(:,1)==others(i,1) & Data.UnitsOnline.SpikeNotes(:,2)==others(i,2));
            if isempty(t) || Data.UnitsOnline.SpikeNotes(t,3)==0
                others_flag(i)=0;
            end
        end
    end
    others=others(find(others_flag),:);
end
units=[positives;negatives;others]
SELECT='max'; OFFLINE=1;
align_tags={'TRIALSTART','HITTARGET'};
if ~isempty(others);  colors=Set1(length(units(:,1))); colors=colors(3:end,:); end


f=figure;f.Color=[1,1,1];
ha=tight_subplot(1+length(units(:,1)),2,[.01 .02],[.1 .1],[.1 .1],...
    [zeros(1,2*length(units(:,1))),1,1],ones(2*(length(units(:,1))+1)));%[0,0,0,0,1,1],[1,1,1,1,1,1]);
drawnow

for align_index=1:2
    % {{{spikes-align},{baselinestart-align,trialstart-align,hittarger-align}},{{spikes},{b-a,t-a,h-a}},...},{{{s},{ba,t-a,h-a}},{{},{}}}
    % plots={unit,unit,unit}
    % unit={{trial1},{trial2},{trial3}}
    % trial={{spiketimes},{baselinestart-align,trialstart-align,hittarger-align}}
    plots_max=cell(1,length(units(:,1))); 
    psths=plots_max;
    
   
    %% record raster, single day
    align_tag=align_tags{align_index};
    for index=1:length(DataPaths)
        t1=tic();
        disp([num2str(index) ' started'])
        Data=load(DataPaths{index}).Data;
        position=Data.Behavior.Position;
        totaltime=Data.Meta.Nev.DataDurationSec;
        x=1:1:totaltime*1000-1;
        [timestamp_trialstart,timestamp_hittarget,timestamp_baselinestart,timestamp_portready,timestamp_portback,grading] = get_timestamps_new(Data);
        timestamp_trialstart=timestamp_trialstart(grading);  timestamp_hittarget=timestamp_hittarget(grading); timestamp_baselinestart=timestamp_baselinestart(grading);
        
        %% event data
        if strcmp(align_tag,'TRIALSTART');
            xmin=-7000; xmax=10000;
            timestamp_align=timestamp_trialstart; %define which to align
        elseif strcmp(align_tag,'HITTARGET');
            xmin=-10000; xmax=7000;
            timestamp_align=timestamp_hittarget;
        end
        indext=find(timestamp_hittarget>0);
        disp(['load data time=' num2str(toc(t1)) 's'])
        t1=tic();
        
        %% record raster, units
        for iii=1:length(units(:,1))
            %% get spike data
            spikes=Data.UnitsOnline;
            index_u=find(spikes.SpikeNotes(:,1)==units(iii,1) & spikes.SpikeNotes(:,2)==units(iii,2));
            if OFFLINE
                index_u=spikes.SpikeNotes(index_u,3);
                spikes=Data.UnitsOffline;
            end
            if index_u>0
                spikes_u=spikes.SpikeTimes{index_u};
                CH_smooth=sdf_smooth(x,spikes_u,100)';
                
                %%
                t_last=-1;
                i_last=-1;
                dir=[];
                for iiii=1:length(indext)
                    i=round(indext(iiii));
                    if timestamp_hittarget(i)>0
                        tt=floor(timestamp_hittarget(i));
                        pos=mean(position(tt+2000:tt+2500));
                        if pos<1000;   dir=[dir 0];    else;  dir=[dir 1];   end
                        t=spikes_u;
                        align=timestamp_align(i);
                        t=t(t>align+xmin & t<align+xmax)-align; %spike lines to plot
                        plots_max{iii}{end+1}={{t},{timestamp_baselinestart(i)-align,timestamp_trialstart(i)-align,timestamp_hittarget(i)-align}};
                        t_left=max(1,round(align+xmin));
                        t_right=min(round(align+xmax),length(CH_smooth));
                        psths{iii}=[psths{iii},[zeros(max(0,t_left-round(align+xmin)),1);CH_smooth(t_left:t_right)';zeros(max(0,t_right-length(CH_smooth)),1)]];
                    end
                end
            end
        end
        disp(['record raster time=' num2str(toc(t1)) 's'])
    end
    %% sort by what?
    t=[];
    if strcmp(align_tag,'TRIALSTART')
        for i=1:length(plots_max{2})
            t=[t;plots_max{2}{i}{2}{2}-plots_max{2}{i}{2}{1}];
        end
    elseif strcmp(align_tag,'HITTARGET')
        for i=1:length(plots_max{2})
            t=[t;plots_max{2}{i}{2}{3}-plots_max{2}{i}{2}{2}];
        end
    end
    t=[t,(1:length(t))'];
    t=sortrows(t,1);
    indext=t(:,2);
    
    %% plot
    for haindex=1:length(units(:,1))
        axes(ha(haindex*2-2+align_index));
        set(gca,'FontSize',10);
        hold(gca,'on');
        xlim([xmin,xmax])
        ylim([0.4,length(indext)+0.6])
        if align_index==1
            yticks([1 length(indext)])
            ylabel(['CH' num2str(units(haindex,1)) 'U' num2str(units(haindex,2))],'Rotation',0,'FontSize',10);
        else
            yticks([])
            ylabel('')
        end
        
        if haindex<=length(positives(:,1)); c=[0.4,0.1,0.1];
        elseif haindex<=length(positives(:,1))+length(negatives(:,1)); c=[0.1,0.1,0.4];
        else; c=colors(haindex-length(positives(:,1))-length(negatives(:,1)),:); end
        
        t_plot=plots{haindex};
        if ~isempty(t_plot)
            for i=1:length(indext)
                t=t_plot{indext(i)}{1}{1};
                for j=t;  line([j,j],i+[-0.5 0.5],'color',c); end
                line([0,0]+t_plot{indext(i)}{2}{1},i+[-0.5 0.5],'color','c','linewidth',1);
                line([3000,3000]+t_plot{indext(i)}{2}{1},i+[-0.5 0.5],'color','c','linewidth',1);
                line([0,0]+t_plot{indext(i)}{2}{2},i+[-0.5 0.5],'color','g','linewidth',1);
                line([0,0]+t_plot{indext(i)}{2}{3},i+[-0.5 0.5],'color','m','linewidth',1);
            end
        end
    end
    
    axes(ha(haindex*2+align_index));
    set(gca,'FontSize',10);
    hold(gca,'on');
    xlim([xmin,xmax])
    ylim([0,30])
    boot_cycle=500;
    lines={};
    for i=1:length(units(:,1))
        if i<=length(positives(:,1)); c='r';
        elseif i<=length(positives(:,1))+length(negatives(:,1)); c='b';
        else; c=colors(i-length(positives(:,1))-length(negatives(:,1)),:); end
        if ~isempty(psths{i})
            unit_95ci=bootci(boot_cycle,{@(x) mean(x),psths{i}'},'Alpha',0.05);
            lines{end+1}=shadedErrorBar(xmin:1:xmax,mean(psths{i}')',abs([unit_95ci(2,:)-mean(psths{i}'); unit_95ci(1,:)-mean(psths{i}')]),'lineprops',{'color',c});
        end
    end
    % t=[]; names={}; for i=1:length(lines); t=[t lines{i}.mainLine]; names{end+1}=['CH',num2str(units(i,1)),'U',num2str(units(i,2))]; end
    % lg=legend(t,names,'box','off');
    % axes(ha(2*(length(positives(:,1))+length(negatives(:,1))+length(others(:,1)))+2))
    % p1=shadedErrorBar(xmin:1:xmax-1,mean(firing_heat_positive{iii*3+aligns-3}')',abs([positive_95ci(2,:)-mean(firing_heat_positive{iii*3+aligns-3}'); positive_95ci(1,:)-mean(firing_heat_positive{iii*3+aligns-3}')]),'lineprops','r');
    % p2=shadedErrorBar(xmin:1:xmax-1,mean(firing_heat_negative{iii*3+aligns-3}')',abs([negative_95ci(2,:)-mean(firing_heat_negative{iii*3+aligns-3}'); negative_95ci(1,:)-mean(firing_heat_negative{iii*3+aligns-3}')]),'lineprops','b');
    % if timestamp_align(1)==timestamp_hittarget(1);  line([0,0],[0,55],'color','m'); end
    
    %% temp
    if strcmp(align_tag,'TRIALSTART')
        line([0,0],[0,55],'color','g','linewidth',1)
    elseif strcmp(align_tag,'HITTARGET')
        line([0,0],[0,55],'color','m','linewidth',1)
    end
    xlabel(ha(length(units(:,1))*2+align_index),['time aligned to ' lower(align_tag) '/ms'])
    
    %% hist of trial time
    if align_index==1
        hittime=[];
        for i=1:length(plots_max{1})
            hittime=[hittime plots{1}{i}{2}(3)];
        end
        hittime=cell2mat(hittime);
    end
    
end

ylabel(ha(length(units(:,1))*2+1),'spikes/s','FontSize',10)
tt=suptitle([ animal '-' DataPaths{1}(end-23:end-20) '-' DataPaths{end}(end-23:end-20)]);
set(tt,'FontSize',12);

hist_ax=axes('Position',[0.2,0.86,0.29,0.05]);%[0.33,0.86,0.16,0.05]);
histogram(hittime,30,'FaceColor','k')
xlim([0,10000])
set(hist_ax,'box','off')
set(hist_ax,'XTick',[])

saveas(gcf,[pwd '\FIGS\m_psth_max\'  animal '-' DataPaths{1}(end-23:end-20) '-' DataPaths{end}(end-23:end-20)])
pause(5)
close(gcf)
end

